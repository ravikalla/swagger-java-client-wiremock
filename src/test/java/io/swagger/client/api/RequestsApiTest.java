/*
 * WireMock
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.26.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Body4;
import io.swagger.client.model.Body5;
import io.swagger.client.model.Body6;
import io.swagger.client.model.Body7;
import io.swagger.client.model.InlineResponse2001;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RequestsApi
 */
@Ignore
public class RequestsApiTest {

    private final RequestsApi api = new RequestsApi();

    /**
     * Count requests by criteria
     *
     * Count requests logged in the journal matching the specified criteria
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsCountPostTest() throws ApiException {
        Body4 body = null;
        InlineResponse2001 response = api.adminRequestsCountPost(body);

        // TODO: test validations
    }
    /**
     * Delete all requests in journal
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsDeleteTest() throws ApiException {
        api.adminRequestsDelete();

        // TODO: test validations
    }
    /**
     * Find requests by criteria
     *
     * Retrieve details of requests logged in the journal matching the specified criteria
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsFindPostTest() throws ApiException {
        Body7 body = null;
        api.adminRequestsFindPost(body);

        // TODO: test validations
    }
    /**
     * Get all requests in journal
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsGetTest() throws ApiException {
        String limit = null;
        String since = null;
        api.adminRequestsGet(limit, since);

        // TODO: test validations
    }
    /**
     * Delete requests mappings matching metadata
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsRemoveByMetadataPostTest() throws ApiException {
        Body6 body = null;
        api.adminRequestsRemoveByMetadataPost(body);

        // TODO: test validations
    }
    /**
     * Remove requests by criteria
     *
     * Removed requests logged in the journal matching the specified criteria
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsRemovePostTest() throws ApiException {
        Body5 body = null;
        api.adminRequestsRemovePost(body);

        // TODO: test validations
    }
    /**
     * Delete request by ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsRequestIdDeleteTest() throws ApiException {
        String requestId = null;
        api.adminRequestsRequestIdDelete(requestId);

        // TODO: test validations
    }
    /**
     * Get request by ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsRequestIdGetTest() throws ApiException {
        String requestId = null;
        api.adminRequestsRequestIdGet(requestId);

        // TODO: test validations
    }
    /**
     * Empty the request journal
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsResetPostTest() throws ApiException {
        api.adminRequestsResetPost();

        // TODO: test validations
    }
    /**
     * Find unmatched requests
     *
     * Get details of logged requests that weren&#x27;t matched by any stub mapping
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adminRequestsUnmatchedGetTest() throws ApiException {
        api.adminRequestsUnmatchedGet();

        // TODO: test validations
    }
}
