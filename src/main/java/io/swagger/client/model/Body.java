/*
 * WireMock
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.26.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AdminmappingsRequest;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Body
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-02T03:16:43.324Z[GMT]")
public class Body {
  @SerializedName("id")
  private String id = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("request")
  private AdminmappingsRequest request = null;

  @SerializedName("response")
  private AllOfbodyResponse response = null;

  @SerializedName("persistent")
  private Boolean persistent = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("scenarioName")
  private String scenarioName = null;

  @SerializedName("requiredScenarioState")
  private String requiredScenarioState = null;

  @SerializedName("newScenarioState")
  private String newScenarioState = null;

  @SerializedName("postServeActions")
  private Object postServeActions = null;

  @SerializedName("metadata")
  private Object metadata = null;

  public Body id(String id) {
    this.id = id;
    return this;
  }

   /**
   * This stub mapping&#x27;s unique identifier
   * @return id
  **/
  @Schema(description = "This stub mapping's unique identifier")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Body uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Alias for the id
   * @return uuid
  **/
  @Schema(description = "Alias for the id")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public Body name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The stub mapping&#x27;s name
   * @return name
  **/
  @Schema(description = "The stub mapping's name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Body request(AdminmappingsRequest request) {
    this.request = request;
    return this;
  }

   /**
   * Get request
   * @return request
  **/
  @Schema(description = "")
  public AdminmappingsRequest getRequest() {
    return request;
  }

  public void setRequest(AdminmappingsRequest request) {
    this.request = request;
  }

  public Body response(AllOfbodyResponse response) {
    this.response = response;
    return this;
  }

   /**
   * Get response
   * @return response
  **/
  @Schema(description = "")
  public AllOfbodyResponse getResponse() {
    return response;
  }

  public void setResponse(AllOfbodyResponse response) {
    this.response = response;
  }

  public Body persistent(Boolean persistent) {
    this.persistent = persistent;
    return this;
  }

   /**
   * Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.
   * @return persistent
  **/
  @Schema(description = "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.")
  public Boolean isPersistent() {
    return persistent;
  }

  public void setPersistent(Boolean persistent) {
    this.persistent = persistent;
  }

  public Body priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * This stub mapping&#x27;s priority relative to others. 1 is highest.
   * minimum: 1
   * @return priority
  **/
  @Schema(description = "This stub mapping's priority relative to others. 1 is highest.")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Body scenarioName(String scenarioName) {
    this.scenarioName = scenarioName;
    return this;
  }

   /**
   * The name of the scenario that this stub mapping is part of
   * @return scenarioName
  **/
  @Schema(description = "The name of the scenario that this stub mapping is part of")
  public String getScenarioName() {
    return scenarioName;
  }

  public void setScenarioName(String scenarioName) {
    this.scenarioName = scenarioName;
  }

  public Body requiredScenarioState(String requiredScenarioState) {
    this.requiredScenarioState = requiredScenarioState;
    return this;
  }

   /**
   * The required state of the scenario in order for this stub to be matched.
   * @return requiredScenarioState
  **/
  @Schema(description = "The required state of the scenario in order for this stub to be matched.")
  public String getRequiredScenarioState() {
    return requiredScenarioState;
  }

  public void setRequiredScenarioState(String requiredScenarioState) {
    this.requiredScenarioState = requiredScenarioState;
  }

  public Body newScenarioState(String newScenarioState) {
    this.newScenarioState = newScenarioState;
    return this;
  }

   /**
   * The new state for the scenario to be updated to after this stub is served.
   * @return newScenarioState
  **/
  @Schema(description = "The new state for the scenario to be updated to after this stub is served.")
  public String getNewScenarioState() {
    return newScenarioState;
  }

  public void setNewScenarioState(String newScenarioState) {
    this.newScenarioState = newScenarioState;
  }

  public Body postServeActions(Object postServeActions) {
    this.postServeActions = postServeActions;
    return this;
  }

   /**
   * A map of the names of post serve action extensions to trigger and their parameters.
   * @return postServeActions
  **/
  @Schema(description = "A map of the names of post serve action extensions to trigger and their parameters.")
  public Object getPostServeActions() {
    return postServeActions;
  }

  public void setPostServeActions(Object postServeActions) {
    this.postServeActions = postServeActions;
  }

  public Body metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.
   * @return metadata
  **/
  @Schema(description = "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body body = (Body) o;
    return Objects.equals(this.id, body.id) &&
        Objects.equals(this.uuid, body.uuid) &&
        Objects.equals(this.name, body.name) &&
        Objects.equals(this.request, body.request) &&
        Objects.equals(this.response, body.response) &&
        Objects.equals(this.persistent, body.persistent) &&
        Objects.equals(this.priority, body.priority) &&
        Objects.equals(this.scenarioName, body.scenarioName) &&
        Objects.equals(this.requiredScenarioState, body.requiredScenarioState) &&
        Objects.equals(this.newScenarioState, body.newScenarioState) &&
        Objects.equals(this.postServeActions, body.postServeActions) &&
        Objects.equals(this.metadata, body.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uuid, name, request, response, persistent, priority, scenarioName, requiredScenarioState, newScenarioState, postServeActions, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    persistent: ").append(toIndentedString(persistent)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    scenarioName: ").append(toIndentedString(scenarioName)).append("\n");
    sb.append("    requiredScenarioState: ").append(toIndentedString(requiredScenarioState)).append("\n");
    sb.append("    newScenarioState: ").append(toIndentedString(newScenarioState)).append("\n");
    sb.append("    postServeActions: ").append(toIndentedString(postServeActions)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
